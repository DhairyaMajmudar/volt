events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server localhost:8080 max_fails=3 fail_timeout=30s;
    }

    upstream file_service {
        server localhost:8081 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    
    server {
        listen 80;
        server_name _;

        # CORS headers
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        add_header Access-Control-Max-Age 86400 always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Auth service routes
        location /api/v1/auth/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File service routes
        location /api/v1/files/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://file_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 100m;
        }

        # User storage stats route
        location /api/v1/users/storage-stats {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://file_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Auth service health check
        location /api/v1/health {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/file-service/health {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://file_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads serving
        location /uploads/ {
            alias /var/uploads/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Default route
        location / {
            return 404 "API endpoint not found";
            add_header Content-Type text/plain;
        }
    }
}